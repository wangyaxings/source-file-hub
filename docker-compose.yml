services:
  # =====================
  # Backend (Go, HTTPS)
  # =====================
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - VERSION=${VERSION:-dev}
        - BUILD_TIME=${BUILD_TIME:-local}
    image: secure-file-hub-backend:latest
    container_name: secure-file-hub-backend
    ports:
      - "8444:8443"   # Backend HTTPS exposed as 8444 on host
    environment:
      - GO_ENV=production
      - DISABLE_HTTPS_REDIRECT=true
      - DB_PATH=/app/data/fileserver.db
      - AUTHBOSS_ROOT_URL=https://localhost:8444
    volumes:
      - ./data:/app/data
      - ./downloads:/app/downloads
      - ./logs:/app/logs
      - ./configs:/app/configs:ro
      - ./certs:/app/certs:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f -k https://localhost:8443/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fileserver-network

  # =====================
  # Frontend (Next.js)
  # =====================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: secure-file-hub-frontend:latest
    container_name: secure-file-hub-frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "30000:30000"  # Web UI
    environment:
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PORT=30000
      - HOSTNAME=0.0.0.0
      # point API proxy to backend service name over Docker network
      - BACKEND_URL=https://backend:8443
    volumes:
      # Only frontend needs certs for HTTPS serving
      - ./certs:/app/certs:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f -k https://localhost:30000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fileserver-network

networks:
  fileserver-network:
    driver: bridge

