version: '3.8'

services:
  # Secure File Hub - Production Container
  # 前后端合并部署，数据库和日志文件外部挂载
  fileserver:
    # 使用预构建的镜像（从 GitHub Container Registry 拉取）
    image: ghcr.io/${GITHUB_REPOSITORY:-wangyaxings/source-file-hub}:latest
    container_name: secure-file-hub

    # 端口映射
    ports:
      - "30000:30000"   # Frontend port
      - "8443:8443"     # Backend HTTPS port

    # 持久化卷 - 数据库和日志文件外部挂载
    volumes:
      # 应用数据 - 挂载到主机目录（包含数据库文件）
      - ./data:/app/data
      # 下载文件 - 挂载到主机目录
      - ./downloads:/app/downloads
      # 日志文件 - 挂载到主机目录
      - ./logs:/app/logs

      # 配置文件（只读挂载）
      - ./configs:/app/configs:ro
      # SSL证书（只读挂载）
      - ./certs:/app/certs:ro

    # 环境变量
    environment:
      - NODE_ENV=production
      - GO_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - DISABLE_HTTPS_REDIRECT=true

      # 数据库配置
      - DB_PATH=/app/data/fileserver.db

      # 前端配置
      - PORT=30000
      - HOSTNAME=0.0.0.0
      - NEXT_PUBLIC_API_URL=https://localhost:8443

      # 后端配置
      - BACKEND_URL=https://localhost:8443

    # 重启策略
    restart: unless-stopped

    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

    # 健康检查
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f -k https://localhost:8443/api/v1/health && curl -f http://localhost:30000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # 网络配置
    networks:
      - fileserver-network

# 注意：数据现在直接挂载到主机目录，不再使用 Docker 卷
# 主机目录：
# - ./data - 数据库文件
# - ./downloads - 下载文件
# - ./logs - 日志文件

# 网络配置
networks:
  fileserver-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
