version: '3.8'

services:
  # Secure File Hub - 开发环境配置
  fileserver:
    # 本地构建配置（开发环境使用）
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: secure-file-hub-dev
    image: secure-file-hub:dev

    # 端口映射
    ports:
      - "30000:30000"   # Frontend port
      - "8443:8443"     # Backend HTTPS port

    # 持久化卷
    volumes:
      # 应用数据 - 挂载到主机目录
      - ./data:/app/data
      - ./downloads:/app/downloads
      - ./logs:/app/logs

      # 配置文件（只读）
      - ./configs:/app/configs:ro
      - ./certs:/app/certs:ro

    # 环境变量
    environment:
      - NODE_ENV=development
      - GO_ENV=development
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - DISABLE_HTTPS_REDIRECT=true

      # 数据库配置
      - DB_PATH=/app/data/fileserver.db

      # 前端配置
      - PORT=30000
      - HOSTNAME=0.0.0.0
      - NEXT_PUBLIC_API_URL=https://localhost:8443

      # 后端配置
      - BACKEND_URL=https://localhost:8443

      # 开发环境配置
      - LOG_LEVEL=debug
      - DEBUG=true

    # 重启策略
    restart: unless-stopped

    # 资源限制（开发环境更宽松）
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '1.0'

    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8443/api/v1/health", "&&", "curl", "-f", "http://localhost:30000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # 网络配置
    networks:
      - fileserver-network

# 网络配置
networks:
  fileserver-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
