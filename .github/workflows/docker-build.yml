name: Docker Build and Push

on:
  push:
    branches: [ 0912, main, master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ 0912, main, master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Secure File Hub
          org.opencontainers.image.description=Secure file management system with frontend and backend
          org.opencontainers.image.vendor=Secure File Hub Team

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      id: build
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        target: runtime
        build-args: |
          VERSION=${{ github.ref_name }}
          BUILD_TIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}

    - name: Generate artifact attestation
      if: github.event_name != 'pull_request'
      uses: actions/attest-build-provenance@v1
      id: attest
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true

    - name: Output image information
      if: github.event_name != 'pull_request'
      run: |
        echo "‚úÖ Docker image built and pushed successfully!"
        echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "üè∑Ô∏è  Tags: ${{ steps.meta.outputs.tags }}"
        echo "üìã Digest: ${{ steps.build.outputs.digest }}"
        echo ""
        echo "üöÄ To deploy using docker-compose:"
        echo "   docker-compose pull"
        echo "   docker-compose up -d"
        echo ""
        echo "üîç To run directly:"
        echo "   docker run -d \\"
        echo "     --name secure-file-hub \\"
        echo "     -p 30000:30000 \\"
        echo "     -p 8443:8443 \\"
        echo "     -v \$(pwd)/data:/app/data \\"
        echo "     -v \$(pwd)/logs:/app/logs \\"
        echo "     -v \$(pwd)/downloads:/app/downloads \\"
        echo "     -v \$(pwd)/configs:/app/configs:ro \\"
        echo "     -v \$(pwd)/certs:/app/certs:ro \\"
        echo "     ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

  # ÂÆâÂÖ®Êâ´ÊèèÔºàÂèØÈÄâÔºâ
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: read
      security-events: write

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'